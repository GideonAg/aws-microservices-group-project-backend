package com.taskmanagementsystem.tasks;


import java.util.HashMap;
import java.util.Map;
import java.util.Objects;

import com.amazonaws.services.dynamodbv2.AmazonDynamoDB;
import com.amazonaws.services.dynamodbv2.AmazonDynamoDBClient;
import com.taskmanagementsystem.util.DynamoDBUtil;
import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;

import com.amazonaws.services.lambda.runtime.Context;
import com.amazonaws.services.lambda.runtime.RequestHandler;
import com.amazonaws.services.lambda.runtime.events.APIGatewayProxyRequestEvent;
import com.amazonaws.services.lambda.runtime.events.APIGatewayProxyResponseEvent;
import com.fasterxml.jackson.databind.JsonNode;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.taskmanagementsystem.entities.Tasks;


import software.amazon.awssdk.services.dynamodb.DynamoDbClient;
import software.amazon.awssdk.services.sns.model.PublishRequest;

public class UpdateTaskHandler implements RequestHandler<APIGatewayProxyRequestEvent, APIGatewayProxyResponseEvent> {
   private static final Logger logger = LogManager.getLogger(UpdateTaskHandler.class);
    private static final ObjectMapper objectMapper = new ObjectMapper();

    private final DynamoDbClient dynamoDbClient;

    public UpdateTaskHandler() {
        this.dynamoDbClient = DynamoDbClient.builder().build();
    }


    @Override
    public APIGatewayProxyResponseEvent handleRequest(APIGatewayProxyRequestEvent requestEvent, Context context) {
        logger.info("Processing update task request ");

        try {
            String taskId = requestEvent.getPathParameters().get("taskId");
            Map<String, Object> authorizeMap = requestEvent.getRequestContext().getAuthorizer();
            JsonNode claimsNode = objectMapper.valueToTree(authorizeMap.get("claims"));
            UserCla
        }
    }



}